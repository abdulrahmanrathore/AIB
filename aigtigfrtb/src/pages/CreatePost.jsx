import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './createpost.css';
import { preview } from '../assets';
import { getRandomPrompt } from '../utils';
import { FormField, Loader } from '../components_ai';

const CreatePost = () => {
  const navigate = useNavigate();

  const [form, setForm] = useState({
    name: '',
    prompt: '',
    photo: '',
  });

  const [generatingImg, setGeneratingImg] = useState(false);
  const [loading, setLoading] = useState(false);

  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });

  const handleSurpriseMe = () => {
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPrompt });
  };

  const generateImage = async () => {
    if(form.prompt){
      try {
        setGeneratingImg(true);
        const response = await fetch('http://localhost:5000/api/v1/dalle',{
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ prompt: form.prompt }),
        })

        const data = await response.json();
        setForm({...form, photo: `data:image/jpeg;base64,${data.photo}`})

      } catch (error) {
        alert(error)
      } finally {
        setGeneratingImg(false);
      }
    } else{
      alert('Please enter a prompt')
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if(form.prompt && form.photo){
      setLoading(true);

      try {
        const response = await fetch('http://localhost:5000/api/v1/post',{
          method: 'POST',
          headers:{
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(form)
        })

        await response.json();
        navigate('/');
      } catch (error) {
        alert(error);
      } finally{
        setLoading(false);
      }
    } else{
      alert('Please enter a prompt and generate an image');
    }
  };

  const boxStyle = {
    width: '200px',
    height: '200px',
  };

  return (
    <section className="container">
      <div class="heading_section">
        <h2>The Community Showcase</h2>
        <p class="text-muted">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>

      <form class="form_section" onSubmit={handleSubmit}>
       
          <FormField
            labelName="Your Name"
            type="text"
            name="name"
            placeholder="Ex., john doe"
            value={form.name}
            handleChange={handleChange}
          />

          <FormField
            labelName="Prompt"
            type="text"
            name="prompt"
            placeholder="An Impressionist oil painting of sunflowers in a purple vaseâ€¦"
            value={form.prompt}
            handleChange={handleChange}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />

          <div class="my-5 bg-white rounded border position-relative" style={boxStyle}>
            { form.photo ? (
              <img
                src={form.photo}
                alt={form.prompt}
                class="w-full h-full"
                style={boxStyle}
              />
            ) : (
              <img
                src={preview}
                alt="preview"
                style={boxStyle}
                class="w-full h-full"
              />
            )}

            {generatingImg && (
              <div class="position-absolute top-50 start-50 translate-middle">
                <Loader />
              </div>
            )}
          </div>
        

        <div class="tw-mt-5 flex gap-5">
          <button
            type="button"
            onClick={generateImage}
            class="btn btn-success"
          >
            {generatingImg ? 'Generating...' : 'Generate'}
          </button>
        </div>

        <div class="share_section">
          <p class="text-muted">Once you have created the image you want, you can share it with others in the community</p>
          <button
            type="submit"
            class="btn btn-primary"
          >
            {loading ? 'Sharing...' : 'Share with the Community'}
          </button>
        </div>
      </form>
    </section>
  );
};

export default CreatePost;