import React, {useState, useEffect} from 'react'
import { Loader, Card, FormField } from '../components_ai'
import "./home.css";
import { Link } from 'react-router-dom';

const RenderCards = ({data, title}) =>{
  if(data?.length > 0) {
    return data.map((post) =>(
      <div class="col-md-6 mb-3 mb-md-0 p-3">
        <Card key={post._id} {...post} />
      </div>
    ))
  }

  return(
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  )
}

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setsearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () =>{
      setLoading(true);
      try {
        const response = await fetch('http://localhost:5000/api/v1/post',{
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        });
  
        if(response.ok) {
          const result = await response.json();
  
          setAllPosts(result.data.reverse());
        }
  
      } catch (error) {
        alert(error);
      } finally{
        setLoading(false);
      }
    }

    fetchPosts();

  }, []);

  const handleSearchChange = (e) => {

    clearTimeout(searchTimeout);

    setsearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchedResults = allPosts.filter((item) =>item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchedResults);
      },500)
    );

  }

  return (
    <section className='container'>
      <div className="container-fluid">
        <div className="heading_section">
          <h1>The Community Showcase</h1>
          <p className="text-muted">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
        </div>
        <Link to="/create" className="btn btn-primary">Create</Link>
      </div>

      <div className="search_section">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="container">
        {
          loading ? (
            <div className='flex justify-content-center align-items-center'>
              <Loader/>
            </div>
          ) : (
            <>
              {
                searchText && (
                  <h2 className="font-medium text-[#666e75] text-xl mb-3">Showing Results for <span className="text-[#222328]">{searchText}</span></h2>
                )
              }

              
                <div class="row">
                  <div class="col-md-12 mb-3 mb-md-0 p-3">
                  {
                  searchText ? (
                    <RenderCards
                      data={searchedResults}
                      title="No search results found" 
                    />
                  ) : (
                    <RenderCards 
                      data={allPosts}
                      title="No posts found"
                    />
                  )
                }
                  </div>
                </div>
              
            </>
          )
        }
      </div>
    </section>
  )
}

export default Home